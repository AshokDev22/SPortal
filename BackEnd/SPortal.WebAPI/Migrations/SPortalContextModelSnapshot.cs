// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPortal.WebAPI.Model.Context;

namespace SPortal.WebAPI.Migrations
{
    [DbContext(typeof(SPortalContext))]
    partial class SPortalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<Guid>("CID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("catName");

                    b.HasKey("CID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<Guid>("PID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PID");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int")
                        .HasColumnName("AQty");

                    b.Property<Guid>("CatID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CatID");

                    b.Property<string>("PName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PName");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("Rate");

                    b.HasKey("PID");

                    b.HasIndex("CatID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("Category", "PCategory")
                        .WithMany("Products")
                        .HasForeignKey("CatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PCategory");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
